// <auto-generated />
using System;
using CriandoApiWebComAuth.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CriandoApiWebComAuth.Migrations
{
    [DbContext(typeof(ContabilidadeFinancas_dbContext))]
    [Migration("20240225020327_NewDb")]
    partial class NewDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CriandoApiWebComAuth.Models.AcaoOrcamentarium", b =>
                {
                    b.Property<int>("IdAcaoOrcamentaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_acao_orcamentaria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAcaoOrcamentaria"), 1L, 1);

                    b.Property<string>("NomeAcaoOrcamentaria")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nome_acao_orcamentaria");

                    b.HasKey("IdAcaoOrcamentaria")
                        .HasName("PK__AcaoOrca__C79BDF80F2D51353");

                    b.HasIndex(new[] { "NomeAcaoOrcamentaria" }, "UQ__AcaoOrca__8A8FF7CBFF3D052C")
                        .IsUnique();

                    b.ToTable("AcaoOrcamentaria");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CategoriaEconomica", b =>
                {
                    b.Property<int>("IdCategoriaEconomica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria_economica");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaEconomica"), 1L, 1);

                    b.Property<string>("NomeCategoriaEconomica")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome_categoria_economica");

                    b.HasKey("IdCategoriaEconomica")
                        .HasName("PK__Categori__37925D0954E38291");

                    b.HasIndex(new[] { "NomeCategoriaEconomica" }, "UQ__Categori__301DEA6EBEC0C709")
                        .IsUnique();

                    b.ToTable("CategoriaEconomica", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email_cliente");

                    b.Property<string>("EnderecoCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco_cliente");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_cliente");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone_cliente");

                    b.HasKey("IdCliente")
                        .HasName("PK__Cliente__677F38F52FF214B6");

                    b.HasIndex(new[] { "EmailCliente" }, "UQ__Cliente__A1DF279E089B041E")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CreditoAdicional", b =>
                {
                    b.Property<int>("IdCreditoAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_credito_adicional");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCreditoAdicional"), 1L, 1);

                    b.Property<DateTime>("DataAprovacao")
                        .HasColumnType("date")
                        .HasColumnName("data_aprovacao");

                    b.Property<DateTime>("DataDistribuicao")
                        .HasColumnType("date")
                        .HasColumnName("data_distribuicao");

                    b.Property<string>("DescricaoCreditoAdicional")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descricao_credito_adicional");

                    b.Property<int?>("IdAcaoOrcamentaria")
                        .HasColumnType("int")
                        .HasColumnName("id_acao_orcamentaria");

                    b.Property<int?>("IdEnteBeneficiario")
                        .HasColumnType("int")
                        .HasColumnName("id_ente_beneficiario");

                    b.Property<int?>("IdFonteRecursos")
                        .HasColumnType("int")
                        .HasColumnName("id_fonte_recursos");

                    b.Property<int?>("IdPagamento")
                        .HasColumnType("int")
                        .HasColumnName("id_pagamento");

                    b.Property<int?>("IdTipoCredito")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_credito");

                    b.Property<decimal>("ValorCreditoAdicional")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_credito_adicional");

                    b.HasKey("IdCreditoAdicional")
                        .HasName("PK__CreditoA__79B2788EB271A8D7");

                    b.HasIndex("IdAcaoOrcamentaria");

                    b.HasIndex("IdEnteBeneficiario");

                    b.HasIndex("IdFonteRecursos");

                    b.HasIndex("IdPagamento");

                    b.HasIndex("IdTipoCredito");

                    b.HasIndex(new[] { "DataDistribuicao" }, "idx_credito_adicional_data_distribuicao");

                    b.ToTable("CreditoAdicional", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CronogramaFinanceiro", b =>
                {
                    b.Property<int>("IdCronogramaFinanceiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cronograma_financeiro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCronogramaFinanceiro"), 1L, 1);

                    b.Property<DateTime>("DataReferencia")
                        .HasColumnType("date")
                        .HasColumnName("data_referencia");

                    b.Property<int?>("IdCronogramaOrcamentario")
                        .HasColumnType("int")
                        .HasColumnName("id_cronograma_orcamentario");

                    b.Property<int?>("IdTipoDespesa")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_despesa");

                    b.Property<int?>("IdUnidadeGestora")
                        .HasColumnType("int")
                        .HasColumnName("id_unidade_gestora");

                    b.Property<decimal>("LimiteLiquidacoes")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("limite_liquidacoes");

                    b.Property<string>("PeriodoCronogramaFinanceiro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("periodo_cronograma_financeiro");

                    b.HasKey("IdCronogramaFinanceiro")
                        .HasName("PK__Cronogra__52E0E12AF45566B0");

                    b.HasIndex("IdCronogramaOrcamentario");

                    b.HasIndex("IdTipoDespesa");

                    b.HasIndex("IdUnidadeGestora");

                    b.HasIndex(new[] { "PeriodoCronogramaFinanceiro" }, "idx_cronograma_financeiro_periodo");

                    b.ToTable("CronogramaFinanceiro", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CronogramaOrcamentario", b =>
                {
                    b.Property<int>("IdCronogramaOrcamentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cronograma_orcamentario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCronogramaOrcamentario"), 1L, 1);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("date")
                        .HasColumnName("data_atualizacao");

                    b.Property<int?>("IdCategoriaEconomica")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria_economica");

                    b.Property<int?>("IdNaturezaDespesa")
                        .HasColumnType("int")
                        .HasColumnName("id_natureza_despesa");

                    b.Property<int?>("IdRepasseFinanceiro")
                        .HasColumnType("int")
                        .HasColumnName("id_repasse_financeiro");

                    b.Property<int?>("IdUnidadeOrcamentaria")
                        .HasColumnType("int")
                        .HasColumnName("id_unidade_orcamentaria");

                    b.Property<decimal>("LimiteOrcamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("limite_orcamento");

                    b.Property<string>("PeriodoCronogramaOrcamentario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("periodo_cronograma_orcamentario");

                    b.HasKey("IdCronogramaOrcamentario")
                        .HasName("PK__Cronogra__50B1B4F111F346CD");

                    b.HasIndex("IdCategoriaEconomica");

                    b.HasIndex("IdNaturezaDespesa");

                    b.HasIndex("IdRepasseFinanceiro");

                    b.HasIndex("IdUnidadeOrcamentaria");

                    b.HasIndex(new[] { "PeriodoCronogramaOrcamentario" }, "idx_cronograma_orcamentario_periodo");

                    b.ToTable("CronogramaOrcamentario", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.DestinoRepasse", b =>
                {
                    b.Property<int>("IdDestinoRepasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_destino_repasse");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDestinoRepasse"), 1L, 1);

                    b.Property<string>("NomeDestinoRepasse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_destino_repasse");

                    b.HasKey("IdDestinoRepasse")
                        .HasName("PK__DestinoR__7DF4EAA2A013F615");

                    b.HasIndex(new[] { "NomeDestinoRepasse" }, "UQ__DestinoR__572BB5052B0F7621")
                        .IsUnique();

                    b.ToTable("DestinoRepasse", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.EnteBeneficiario", b =>
                {
                    b.Property<int>("IdEnteBeneficiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ente_beneficiario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnteBeneficiario"), 1L, 1);

                    b.Property<string>("NomeEnteBeneficiario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_ente_beneficiario");

                    b.HasKey("IdEnteBeneficiario")
                        .HasName("PK__EnteBene__7D1E2D2B2C7BB0CF");

                    b.HasIndex(new[] { "NomeEnteBeneficiario" }, "UQ__EnteBene__6127379A9BB8C613")
                        .IsUnique();

                    b.ToTable("EnteBeneficiario", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Fatura", b =>
                {
                    b.Property<int>("IdFatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_fatura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFatura"), 1L, 1);

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("date")
                        .HasColumnName("data_emissao");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date")
                        .HasColumnName("data_vencimento");

                    b.Property<int?>("IdServico")
                        .HasColumnType("int")
                        .HasColumnName("id_servico");

                    b.Property<bool>("StatusFatura")
                        .HasColumnType("bit")
                        .HasColumnName("status_fatura");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdFatura")
                        .HasName("PK__Fatura__F4902DCB48DF0313");

                    b.HasIndex("IdServico");

                    b.HasIndex(new[] { "DataVencimento" }, "idx_fatura_data_vencimento");

                    b.ToTable("Fatura", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.FonteRecurso", b =>
                {
                    b.Property<int>("IdFonteRecursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_fonte_recursos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFonteRecursos"), 1L, 1);

                    b.Property<string>("NomeFonteRecursos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome_fonte_recursos");

                    b.HasKey("IdFonteRecursos")
                        .HasName("PK__FonteRec__782360D86A7EE11A");

                    b.HasIndex(new[] { "NomeFonteRecursos" }, "UQ__FonteRec__02AAF36B6DC751D7")
                        .IsUnique();

                    b.ToTable("FonteRecursos");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.NaturezaDespesa", b =>
                {
                    b.Property<int>("IdNaturezaDespesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_natureza_despesa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNaturezaDespesa"), 1L, 1);

                    b.Property<string>("NomeNaturezaDespesa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nome_natureza_despesa");

                    b.HasKey("IdNaturezaDespesa")
                        .HasName("PK__Natureza__68E222645138E531");

                    b.HasIndex(new[] { "NomeNaturezaDespesa" }, "UQ__Natureza__50338DA49B3DB6E7")
                        .IsUnique();

                    b.ToTable("NaturezaDespesa", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.OrigemRepasse", b =>
                {
                    b.Property<int>("IdOrigemRepasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_origem_repasse");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrigemRepasse"), 1L, 1);

                    b.Property<string>("NomeOrigemRepasse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_origem_repasse");

                    b.HasKey("IdOrigemRepasse")
                        .HasName("PK__OrigemRe__9599D5B19A13ED47");

                    b.HasIndex(new[] { "NomeOrigemRepasse" }, "UQ__OrigemRe__CFFB887529BAC006")
                        .IsUnique();

                    b.ToTable("OrigemRepasse", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pagamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPagamento"), 1L, 1);

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("date")
                        .HasColumnName("data_pagamento");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("forma_pagamento");

                    b.Property<int?>("IdFatura")
                        .HasColumnType("int")
                        .HasColumnName("id_fatura");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdPagamento")
                        .HasName("PK__Pagament__3A2D33F72BA6E8D5");

                    b.HasIndex("IdFatura");

                    b.HasIndex(new[] { "DataPagamento" }, "idx_pagamento_data_pagamento");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Projeto", b =>
                {
                    b.Property<int>("IdProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_projeto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProjeto"), 1L, 1);

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("date")
                        .HasColumnName("data_termino");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_projeto");

                    b.Property<bool>("StatusProjeto")
                        .HasColumnType("bit")
                        .HasColumnName("status_projeto");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdProjeto")
                        .HasName("PK__Projeto__274B9B6BCD381FCA");

                    b.HasIndex("IdCliente");

                    b.HasIndex(new[] { "NomeProjeto" }, "idx_projeto_nome");

                    b.ToTable("Projeto", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.RepasseFinanceiro", b =>
                {
                    b.Property<int>("IdRepasseFinanceiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_repasse_financeiro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRepasseFinanceiro"), 1L, 1);

                    b.Property<DateTime>("DataDistribuicao")
                        .HasColumnType("date")
                        .HasColumnName("data_distribuicao");

                    b.Property<DateTime>("DataEfetivacao")
                        .HasColumnType("date")
                        .HasColumnName("data_efetivacao");

                    b.Property<string>("DescricaoRepasseFinanceiro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descricao_repasse_financeiro");

                    b.Property<string>("FinalidadeRepasseFinanceiro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("finalidade_repasse_financeiro");

                    b.Property<int?>("IdCreditoAdicional")
                        .HasColumnType("int")
                        .HasColumnName("id_credito_adicional");

                    b.Property<int?>("IdDestinoRepasse")
                        .HasColumnType("int")
                        .HasColumnName("id_destino_repasse");

                    b.Property<int?>("IdEnteBeneficiario")
                        .HasColumnType("int")
                        .HasColumnName("id_ente_beneficiario");

                    b.Property<int?>("IdOrigemRepasse")
                        .HasColumnType("int")
                        .HasColumnName("id_origem_repasse");

                    b.Property<decimal>("ValorRepasseFinanceiro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_repasse_financeiro");

                    b.HasKey("IdRepasseFinanceiro")
                        .HasName("PK__RepasseF__379C8103D936B5DA");

                    b.HasIndex("IdCreditoAdicional");

                    b.HasIndex("IdDestinoRepasse");

                    b.HasIndex("IdEnteBeneficiario");

                    b.HasIndex("IdOrigemRepasse");

                    b.HasIndex(new[] { "DataEfetivacao" }, "idx_repasse_financeiro_data_efetivacao");

                    b.ToTable("RepasseFinanceiro", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Servico", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServico"), 1L, 1);

                    b.Property<string>("DescricaoServico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao_servico");

                    b.Property<short>("HorasTrabalhadas")
                        .HasColumnType("smallint")
                        .HasColumnName("horas_trabalhadas");

                    b.Property<int?>("IdProjeto")
                        .HasColumnType("int")
                        .HasColumnName("id_projeto");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_hora");

                    b.HasKey("IdServico")
                        .HasName("PK__Servico__D06FB5A25BCE7546");

                    b.HasIndex("IdProjeto");

                    b.HasIndex(new[] { "DescricaoServico" }, "idx_servico_descricao");

                    b.ToTable("Servico", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.TipoCredito", b =>
                {
                    b.Property<int>("IdTipoCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_credito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoCredito"), 1L, 1);

                    b.Property<string>("NomeTipoCredito")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome_tipo_credito");

                    b.HasKey("IdTipoCredito")
                        .HasName("PK__TipoCred__E5C431A438263A39");

                    b.HasIndex(new[] { "NomeTipoCredito" }, "UQ__TipoCred__D624363BDD4C47D9")
                        .IsUnique();

                    b.ToTable("TipoCredito", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.TipoDespesa", b =>
                {
                    b.Property<int>("IdTipoDespesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_despesa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDespesa"), 1L, 1);

                    b.Property<string>("NomeTipoDespesa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome_tipo_despesa");

                    b.HasKey("IdTipoDespesa")
                        .HasName("PK__TipoDesp__104D9A123C841FCC");

                    b.HasIndex(new[] { "NomeTipoDespesa" }, "UQ__TipoDesp__D5FCCE1E2F742138")
                        .IsUnique();

                    b.ToTable("TipoDespesa", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.UnidadeGestora", b =>
                {
                    b.Property<int>("IdUnidadeGestora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_unidade_gestora");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadeGestora"), 1L, 1);

                    b.Property<string>("NomeUnidadeGestora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_unidade_gestora");

                    b.HasKey("IdUnidadeGestora")
                        .HasName("PK__UnidadeG__CF1D0B1FE6BF0290");

                    b.HasIndex(new[] { "NomeUnidadeGestora" }, "UQ__UnidadeG__FF8E3048D6E13ADA")
                        .IsUnique();

                    b.ToTable("UnidadeGestora", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.UnidadeOrcamentarium", b =>
                {
                    b.Property<int>("IdUnidadeOrcamentaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_unidade_orcamentaria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadeOrcamentaria"), 1L, 1);

                    b.Property<string>("NomeUnidadeOrcamentaria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_unidade_orcamentaria");

                    b.HasKey("IdUnidadeOrcamentaria")
                        .HasName("PK__UnidadeO__FB73E58B9DB2E566");

                    b.HasIndex(new[] { "NomeUnidadeOrcamentaria" }, "UQ__UnidadeO__4C9C56827A8B781A")
                        .IsUnique();

                    b.ToTable("UnidadeOrcamentaria");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CreditoAdicional", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.AcaoOrcamentarium", "IdAcaoOrcamentariaNavigation")
                        .WithMany("CreditoAdicionals")
                        .HasForeignKey("IdAcaoOrcamentaria")
                        .HasConstraintName("FK__CreditoAd__id_ac__693CA210");

                    b.HasOne("CriandoApiWebComAuth.Models.EnteBeneficiario", "IdEnteBeneficiarioNavigation")
                        .WithMany("CreditoAdicionals")
                        .HasForeignKey("IdEnteBeneficiario")
                        .HasConstraintName("FK__CreditoAd__id_en__6754599E");

                    b.HasOne("CriandoApiWebComAuth.Models.FonteRecurso", "IdFonteRecursosNavigation")
                        .WithMany("CreditoAdicionals")
                        .HasForeignKey("IdFonteRecursos")
                        .HasConstraintName("FK__CreditoAd__id_fo__6A30C649");

                    b.HasOne("CriandoApiWebComAuth.Models.Pagamento", "IdPagamentoNavigation")
                        .WithMany("CreditoAdicionals")
                        .HasForeignKey("IdPagamento")
                        .HasConstraintName("FK__CreditoAd__id_pa__66603565");

                    b.HasOne("CriandoApiWebComAuth.Models.TipoCredito", "IdTipoCreditoNavigation")
                        .WithMany("CreditoAdicionals")
                        .HasForeignKey("IdTipoCredito")
                        .HasConstraintName("FK__CreditoAd__id_ti__68487DD7");

                    b.Navigation("IdAcaoOrcamentariaNavigation");

                    b.Navigation("IdEnteBeneficiarioNavigation");

                    b.Navigation("IdFonteRecursosNavigation");

                    b.Navigation("IdPagamentoNavigation");

                    b.Navigation("IdTipoCreditoNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CronogramaFinanceiro", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.CronogramaOrcamentario", "IdCronogramaOrcamentarioNavigation")
                        .WithMany("CronogramaFinanceiros")
                        .HasForeignKey("IdCronogramaOrcamentario")
                        .HasConstraintName("FK__Cronogram__id_cr__0C85DE4D");

                    b.HasOne("CriandoApiWebComAuth.Models.TipoDespesa", "IdTipoDespesaNavigation")
                        .WithMany("CronogramaFinanceiros")
                        .HasForeignKey("IdTipoDespesa")
                        .HasConstraintName("FK__Cronogram__id_ti__0E6E26BF");

                    b.HasOne("CriandoApiWebComAuth.Models.UnidadeGestora", "IdUnidadeGestoraNavigation")
                        .WithMany("CronogramaFinanceiros")
                        .HasForeignKey("IdUnidadeGestora")
                        .HasConstraintName("FK__Cronogram__id_un__0D7A0286");

                    b.Navigation("IdCronogramaOrcamentarioNavigation");

                    b.Navigation("IdTipoDespesaNavigation");

                    b.Navigation("IdUnidadeGestoraNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CronogramaOrcamentario", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.CategoriaEconomica", "IdCategoriaEconomicaNavigation")
                        .WithMany("CronogramaOrcamentarios")
                        .HasForeignKey("IdCategoriaEconomica")
                        .HasConstraintName("FK__Cronogram__id_ca__02FC7413");

                    b.HasOne("CriandoApiWebComAuth.Models.NaturezaDespesa", "IdNaturezaDespesaNavigation")
                        .WithMany("CronogramaOrcamentarios")
                        .HasForeignKey("IdNaturezaDespesa")
                        .HasConstraintName("FK__Cronogram__id_na__03F0984C");

                    b.HasOne("CriandoApiWebComAuth.Models.RepasseFinanceiro", "IdRepasseFinanceiroNavigation")
                        .WithMany("CronogramaOrcamentarios")
                        .HasForeignKey("IdRepasseFinanceiro")
                        .HasConstraintName("FK__Cronogram__id_re__01142BA1");

                    b.HasOne("CriandoApiWebComAuth.Models.UnidadeOrcamentarium", "IdUnidadeOrcamentariaNavigation")
                        .WithMany("CronogramaOrcamentarios")
                        .HasForeignKey("IdUnidadeOrcamentaria")
                        .HasConstraintName("FK__Cronogram__id_un__02084FDA");

                    b.Navigation("IdCategoriaEconomicaNavigation");

                    b.Navigation("IdNaturezaDespesaNavigation");

                    b.Navigation("IdRepasseFinanceiroNavigation");

                    b.Navigation("IdUnidadeOrcamentariaNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Fatura", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.Servico", "IdServicoNavigation")
                        .WithMany("Faturas")
                        .HasForeignKey("IdServico")
                        .HasConstraintName("FK__Fatura__id_servi__534D60F1");

                    b.Navigation("IdServicoNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Pagamento", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.Fatura", "IdFaturaNavigation")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdFatura")
                        .HasConstraintName("FK__Pagamento__id_fa__571DF1D5");

                    b.Navigation("IdFaturaNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Projeto", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Projeto__id_clie__4CA06362");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.RepasseFinanceiro", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.CreditoAdicional", "IdCreditoAdicionalNavigation")
                        .WithMany("RepasseFinanceiros")
                        .HasForeignKey("IdCreditoAdicional")
                        .HasConstraintName("FK__RepasseFi__id_cr__72C60C4A");

                    b.HasOne("CriandoApiWebComAuth.Models.DestinoRepasse", "IdDestinoRepasseNavigation")
                        .WithMany("RepasseFinanceiros")
                        .HasForeignKey("IdDestinoRepasse")
                        .HasConstraintName("FK__RepasseFi__id_de__75A278F5");

                    b.HasOne("CriandoApiWebComAuth.Models.EnteBeneficiario", "IdEnteBeneficiarioNavigation")
                        .WithMany("RepasseFinanceiros")
                        .HasForeignKey("IdEnteBeneficiario")
                        .HasConstraintName("FK__RepasseFi__id_en__73BA3083");

                    b.HasOne("CriandoApiWebComAuth.Models.OrigemRepasse", "IdOrigemRepasseNavigation")
                        .WithMany("RepasseFinanceiros")
                        .HasForeignKey("IdOrigemRepasse")
                        .HasConstraintName("FK__RepasseFi__id_or__74AE54BC");

                    b.Navigation("IdCreditoAdicionalNavigation");

                    b.Navigation("IdDestinoRepasseNavigation");

                    b.Navigation("IdEnteBeneficiarioNavigation");

                    b.Navigation("IdOrigemRepasseNavigation");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Servico", b =>
                {
                    b.HasOne("CriandoApiWebComAuth.Models.Projeto", "IdProjetoNavigation")
                        .WithMany("Servicos")
                        .HasForeignKey("IdProjeto")
                        .HasConstraintName("FK__Servico__id_proj__5070F446");

                    b.Navigation("IdProjetoNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.AcaoOrcamentarium", b =>
                {
                    b.Navigation("CreditoAdicionals");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CategoriaEconomica", b =>
                {
                    b.Navigation("CronogramaOrcamentarios");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Cliente", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CreditoAdicional", b =>
                {
                    b.Navigation("RepasseFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.CronogramaOrcamentario", b =>
                {
                    b.Navigation("CronogramaFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.DestinoRepasse", b =>
                {
                    b.Navigation("RepasseFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.EnteBeneficiario", b =>
                {
                    b.Navigation("CreditoAdicionals");

                    b.Navigation("RepasseFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Fatura", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.FonteRecurso", b =>
                {
                    b.Navigation("CreditoAdicionals");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.NaturezaDespesa", b =>
                {
                    b.Navigation("CronogramaOrcamentarios");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.OrigemRepasse", b =>
                {
                    b.Navigation("RepasseFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Pagamento", b =>
                {
                    b.Navigation("CreditoAdicionals");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Projeto", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.RepasseFinanceiro", b =>
                {
                    b.Navigation("CronogramaOrcamentarios");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.Servico", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.TipoCredito", b =>
                {
                    b.Navigation("CreditoAdicionals");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.TipoDespesa", b =>
                {
                    b.Navigation("CronogramaFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.UnidadeGestora", b =>
                {
                    b.Navigation("CronogramaFinanceiros");
                });

            modelBuilder.Entity("CriandoApiWebComAuth.Models.UnidadeOrcamentarium", b =>
                {
                    b.Navigation("CronogramaOrcamentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
